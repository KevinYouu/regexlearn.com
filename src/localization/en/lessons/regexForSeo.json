{
  "lesson.regexForSeo.starter.title": "搜索引擎优化正则表达式",
  "lesson.regexForSeo.starter.description": "Regex是一组经常在许多领域使用的正则表达式，尤其是那些希望提高生产率的人。使用正则表达式进行搜索引擎优化的优点是，它可以更容易地分析大数据和编写更丰富的过滤器。如果你不熟悉Regex，我们建议你从“Regex 101”教程开始\\n\\n首先在Regex字段中键入“OK”，继续执行第一步并访问更详细的解释。",

  "lesson.regexForSeo.usage.title": "用例",
  "lesson.regexForSeo.usage.description": "你可以在“谷歌分析”、“谷歌数据工作室”、“谷歌工作表”、“谷歌搜索控制台”、“Ahrefs”、“Deepcrawl”、“尖叫蛙”等平台上使用正则表达式进行搜索引擎优化。它也常用于`。htaccess和机器人。txt（类似regex的语法）`文件\\n\\nBelow是一个示例正则表达式，它将只选择列表中以“Google”开头的文本。",

  "lesson.regexForSeo.basics.title": "基础",
  "lesson.regexForSeo.basics.description": "让我们来看看一些经常使用的正则表达式。我们建议您阅读“Regex 101”教程，以了解更多有关这些内容的信息。键入“是”开始。",

  "lesson.regexForSeo.or.title": "Or 操作符 `|`",
  "lesson.regexForSeo.or.description": "我们使用Or运算符`|`来过滤多个表达式。例如，过滤包含“seo”和“regex”的文本，方法是写入这两个单词，并用Or运算符分隔它们 `|`.",

  "lesson.regexForSeo.optional.title": "可选运算符 `?`",
  "lesson.regexForSeo.optional.description": "我们用它来表示表达式或字符是可选的。例如，我们想过滤同时包含“http”和“https”的文本。对于这个操作，我们可以使用Or运算符“|”，但对于这两个几乎相同的单词，有更好的方法\\n\\n在本例中，字母's'是可选的。相反，添加一个问号“？”直到字母“s”的结尾。",

  "lesson.regexForSeo.any.title": "任何 `.*`",
  "lesson.regexForSeo.any.description": "在正则表达式中，句点“.”可以匹配任何内容，包括空格。但此匹配仅适用于使用它的单个字符。星号字符“*”表示前面的项目根本不存在，或在文本中出现多次。当两者一起使用时，这意味着在使用的地方可以有一个无限长的元素\\n\\n下面是各种关键字。添加'%1！'在正则表达式的末尾写一个以“how to write”开头并匹配其后所有内容的表达式。",

  "lesson.regexForSeo.contains.title": "包含",
  "lesson.regexForSeo.contains.description": "为了过滤包含我们要查找的单词或短语的文本，我们在两个短语之间写下我们要查找的单词一切都匹配。例如，输入`*购买。*`过滤掉包含“购买”的内容。",

  "lesson.regexForSeo.negated.title": "否定字符集 `[^abc]`",
  "lesson.regexForSeo.negated.description": "我们使用否定字符集“[^]”来表示不希望包含的字符。我们不想包含的字符写在方括号中，开头带有插入符号。下面是“http”和“https”。由于“http”同时出现在这两种语言中，所以它也会选择“https”。在字母“p”后键入“[^s]”以排除字母“s”。",

  "lesson.regexForSeo.caret.title": "插入符号符号 `^`",
  "lesson.regexForSeo.caret.description": "Let's say we have a list of URLs, and we want to find only those URLs that start with `http`. But URLs also contain `http` in different parts other than their beginning. So add a caret `^` to the beginning of the following expression to filter out only those starting with `http`.",

  "lesson.regexForSeo.dollarAndEscape.title": "美元符号 `$` and Escape Character `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "Again we have a list of URLs. We want to find only those URLs ending in `.htm`.\\n\\nSince the period `.` is a special character that matches everything, we first need to disable the period before `htm` using the escape character `\\`. This applies to all special characters.\\n\\nThen add a `$` sign to the end of the expression. This ensures that the text to be filtered ends with the expression written before it.",

  "lesson.regexForSeo.limitation.title": "Length Restrictions `{n}`",
  "lesson.regexForSeo.limitation.description": "We may want to filter the results by character lengths. For example, to filter URLs that are `35` characters long, type the number you want to use for the length, `{35}`, using curly braces at the end of the period `.`.",

  "lesson.regexForSeo.maxLimitation.title": "Length Restrictions (Maximum) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "To filter URLs with a maximum length of `35` characters, type `{1,35}` the minimum and maximum number values we will use for the length, using curly braces at the end of the period `.`.",

  "lesson.regexForSeo.minLimitation.title": "Length Restrictions (Minumum) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "To filter URLs with a minimum length of `35` characters, type `{35,}` using curly braces at the end of the period and ending with a comma for the minimum number value we will use for the length.",

  "lesson.regexForSeo.robots.title": "robots.txt (regex-like syntax)",
  "lesson.regexForSeo.robots.description": "Here is an example of regex-like usage in the `robots.txt` file. The example states that bots should not crawl links with the extension `pdf`.",

  "lesson.regexForSeo.htaccess.title": ".htaccess",
  "lesson.regexForSeo.htaccess.description": "Here is an example of using regex in the `.htaccess` file. In the example, `php` extension links are directed to `html` extensions with `301` code.",

  "lesson.regexForSeo.outro.title": "Outro",
  "lesson.regexForSeo.outro.description": "Regex knowledge is a skill that increases productivity on any platform that allows you to use regex. Once you start using it and improve this skill, it will help you complete many repetitive tasks faster and save time for other things. To better understand the basics of Regex, you can visit the `Regex 101` tutorial. You can use the `Playground` page to test your expressions on your texts."
}
